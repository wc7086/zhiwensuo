C51 COMPILER V9.57.0.0   EEPROM                                                            09/15/2021 12:41:20 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE eeprom.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..\代码;.\oled) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) TABS(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          //    IapEraseSector(IAP_ADDRESS);    //扇区擦除
   4          //    for (i=0; i<512; i++)           //检测是否擦除成功(全FF检测)
   5          //    {
   6          //        if (IapReadByte(IAP_ADDRESS+i) != 0xff)
   7          //            goto Error;             //如果出错,则退出
   8          //    }
   9          //    P1 = 0xfc;                      //1111,1100 擦除成功
  10          //    Delay(10);                      //延时
  11          //    for (i=0; i<512; i++)           //编程512字节
  12          //    {
  13          //        IapProgramByte(IAP_ADDRESS+i, (BYTE)i);
  14          //    }
  15          
  16          ///*----------------------------
  17          //关闭IAP
  18          //----------------------------*/
  19          //void IapIdle()
  20          //{
  21          //    IAP_CONTR = 0;                  //关闭IAP功能
  22          //    IAP_CMD = 0;                    //清除命令寄存器
  23          //    IAP_TRIG = 0;                   //清除触发寄存器
  24          //    IAP_ADDRH = 0x80;               //将地址设置到非IAP区域
  25          //    IAP_ADDRL = 0;
  26          //}
  27          
  28          ///*----------------------------
  29          //从ISP/IAP/EEPROM区域读取一字节
  30          //----------------------------*/
  31          //u8 IapReadu8(u16 addr)
  32          //{
  33          //    u8 dat;                       //数据缓冲区
  34          
  35          //    IAP_CONTR = ENABLE_IAP;         //使能IAP
  36          //    IAP_CMD = CMD_READ;             //设置IAP命令
  37          //    IAP_ADDRL = addr;               //设置IAP低地址
  38          //    IAP_ADDRH = addr >> 8;          //设置IAP高地址
  39          //    IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  40          //    IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  41          //    _nop_();                        //等待ISP/IAP/EEPROM操作完成
  42          //    dat = IAP_DATA;                 //读ISP/IAP/EEPROM数据
  43          //    IapIdle();                      //关闭IAP功能
  44          
  45          //    return dat;                     //返回
  46          //}
  47          
  48          ///*----------------------------
  49          //写一字节数据到ISP/IAP/EEPROM区域
  50          //----------------------------*/
  51          //void IapProgramu8(u16 addr, u8 dat)
  52          //{
  53          //    IAP_CONTR = ENABLE_IAP;         //使能IAP
  54          //    IAP_CMD = CMD_PROGRAM;          //设置IAP命令
C51 COMPILER V9.57.0.0   EEPROM                                                            09/15/2021 12:41:20 PAGE 2   

  55          //    IAP_ADDRL = addr;               //设置IAP低地址
  56          //    IAP_ADDRH = addr >> 8;          //设置IAP高地址
  57          //    IAP_DATA = dat;                 //写ISP/IAP/EEPROM数据
  58          //    IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  59          //    IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  60          //    _nop_();                        //等待ISP/IAP/EEPROM操作完成
  61          //    IapIdle();
  62          //}
  63          
  64          ///*----------------------------
  65          //扇区擦除
  66          //----------------------------*/
  67          //void IapEraseSector(u16 addr)
  68          //{
  69          //    IAP_CONTR = ENABLE_IAP;         //使能IAP
  70          //    IAP_CMD = CMD_ERASE;            //设置IAP命令
  71          //    IAP_ADDRL = addr;               //设置IAP低地址
  72          //    IAP_ADDRH = addr >> 8;          //设置IAP高地址
  73          //    IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  74          //    IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  75          //    _nop_();                        //等待ISP/IAP/EEPROM操作完成
  76          //    IapIdle();
  77          //}
  78          
  79          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
