C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..\代码;.\oled) DEBU
                    -G OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc15.h"
   2          #include "uart.h"
   3          #include "as608.h"
   4          #include "key.h"
   5          #include "servo.h"
   6          #include "pwr.h"
   7          #include "oled.h"
   8          #include "beep.h"
   9          #include "eeprom.h"
  10          sbit tch_in = P3^2;
  11          sbit as608_pwr = P1^2;
  12          /*
  13          使用本代码，请注明出处：可待电子
  14          成品购买淘宝店铺：可待电子
  15          接51、stm32单片机程序仿真设计
  16          qq：3155913003
  17          */
  18          u16 Battery=0;        //电池电压
  19          u16   volt;
  20          
  21          u8  key;            //按键值
  22          u8  weakup_flag=2;  //唤醒标志
  23          u16 time=0;         //关机时间
  24          
  25          /*----------------------------
  26          掉电模式，关闭系统电源 uA待机
  27          ----------------------------*/
  28          void Pwr_Off()
  29          {
  30   1        
  31   1        as608_pwr=1;      //关闭OLED和指纹电源
  32   1        
  33   1        delay_ms(600);
  34   1        
  35   1        P1M0 = 0xff;
  36   1        P1M1 = 0xff;
  37   1        P4M0 = 0xff;
  38   1        P4M1 = 0xff;
  39   1        P5M0 = 0xff;
  40   1        P5M1 = 0xff;
  41   1        P3M0 = 0xc3;      //1100 0011
  42   1        P3M1 = 0xc3;      //1100 0011
  43   1        
  44   1        IT0 = 0;          //设置INT0的中断类型为上升沿和下降沿,上升沿和下降沿均可唤醒
  45   1        EX0 = 1;          //使能INT0中断
  46   1        
  47   1        IT1 = 1;          //设置INT1的中断类型 (1:仅下降沿 0:上升沿和下降沿)
  48   1        EX1 = 1;          //使能INT1中断
  49   1        
  50   1        EA=1;
  51   1        
  52   1        delay_ms(20);
  53   1        
  54   1        PCON |= 0x02;      //MCU进入掉电模式
C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 2   

  55   1        _nop_();          //掉电模式被唤醒后,首先执行此语句,然后再进入中断服务程序
  56   1        _nop_();
  57   1        _nop_();          
  58   1        _nop_();
  59   1        P1M0 = 0x00;
  60   1        P1M1 = 0x00;
  61   1        P3M0 = 0x00;
  62   1        P3M1 = 0x00;
  63   1        P4M0 = 0x00;
  64   1        P4M1 = 0x00;
  65   1        P5M0 = 0x00;
  66   1        P5M1 = 0x00;
  67   1      }
  68          /*----------------------------
  69          获取电池电压
  70          ----------------------------*/
  71          void Battery_get()
  72          {
  73   1        volt =  ADC3V3_Get();     //读取3.3V电压值为多少
  74   1        delay_ms(1);
  75   1        volt = ADC3V3_Get();      //读取3.3V电压值为多少
  76   1        delay_ms(1);
  77   1        volt += ADC3V3_Get();     //读取3.3V电压值为多少
  78   1        volt=volt/2;
  79   1        Battery = 85248 / volt; //256/VCC = volt/3.33   => VCC=256*3.3/volt
  80   1      }
  81          /*----------------------------
  82          显示电池电压
  83          ----------------------------*/
  84          void show_volt()
  85          {
  86   1        u8 i=0;
  87   1        Battery_get();
  88   1        i=24;
  89   1        OLED_ShowCHinese(i,2,12);
  90   1        i+=16;
  91   1        OLED_ShowCHinese(i,2,13);  //电量
  92   1        i+=16;
  93   1        OLED_ShowChar(i,2,':');
  94   1        i+=8;
  95   1        OLED_ShowChar(i,2,Battery %1000/100 +0x30);
  96   1        i+=8;
  97   1        OLED_ShowChar(i,2,'.');
  98   1        i+=8;
  99   1        OLED_ShowChar(i,2,Battery %100/10   +0x30);
 100   1        i+=8;
 101   1        OLED_ShowChar(i,2,Battery %10       +0x30);
 102   1        i+=8;
 103   1        OLED_ShowChar(i,2,'V');
 104   1      }
 105          /*----------------------------
 106          按键触发唤醒后执行任务
 107          ----------------------------*/
 108          void key_weak_up_work()     
 109          {
 110   1        u8 i=0,step=0;
 111   1        time=2000;
 112   1        uart_rx_sta=0;
 113   1        as608_pwr=0;              //打开OLED和指纹电源
 114   1        delay_ms(10);             //指纹供电10ms以上再初始化串口
 115   1        Uart1_Init();             //串口初始化
 116   1        while((uart_rx_sta==0)&&(i<200))
C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 3   

 117   1        {
 118   2          i++;
 119   2          delay_ms(1);
 120   2        }
 121   1        delay_ms(400);
 122   1        OLED_Init();              //初始化OLED
 123   1        show_volt();
 124   1        beep_work(1,100);
 125   1        finger_id=PS_ValidTempleteNum();
 126   1        
 127   1        while(time-->0)
 128   1        {   
 129   2          Delay1ms();
 130   2          key=Key_Scan();   //按键按下,时间刷新
 131   2          if(key!=0)
 132   2            time=5000;
 133   2          if(step==0)
 134   2          {
 135   3            if(key==1)        //放上手指，按key1添加
 136   3            {
 137   4              OLED_ShowString(0,0,"                ");
 138   4              OLED_ShowString(0,2,"                ");
 139   4              OLED_ShowCHinese(32,0,0); //添加用户
 140   4              OLED_ShowCHinese(48,0,1);
 141   4              OLED_ShowCHinese(64,0,10);
 142   4              OLED_ShowCHinese(80,0,11);
 143   4              OLED_ShowCHinese(32,2,14);  //请放手指
 144   4              OLED_ShowCHinese(48,2,15);
 145   4              OLED_ShowCHinese(64,2,16);
 146   4              OLED_ShowCHinese(80,2,17);
 147   4              for(i=0;i<10;i++)
 148   4              {
 149   5                delay_ms(100);
 150   5                if(FPM10A_Add_Fingerprint()==0)
 151   5                {
 152   6                  OLED_ShowString(0,2,"                ");
 153   6                  OLED_ShowCHinese(64,0,2);//成功
 154   6                  OLED_ShowCHinese(80,0,3);
 155   6                  break;
 156   6                }
 157   5              }
 158   4              if(i==10)
 159   4              {
 160   5                OLED_ShowString(0,2,"                ");
 161   5                OLED_ShowCHinese(64,0,4);//失败
 162   5                OLED_ShowCHinese(80,0,5);
 163   5              }
 164   4              delay_ms(1000);
 165   4              step=2;
 166   4            }
 167   3            if(key==2)        //key2清除所有
 168   3            {
 169   4              OLED_ShowCHinese(16,0,6);//删除所有指纹
 170   4              OLED_ShowCHinese(32,0,7);
 171   4              OLED_ShowCHinese(48,0,8);
 172   4              OLED_ShowCHinese(64,0,9);
 173   4              OLED_ShowCHinese(80,0,10);
 174   4              OLED_ShowCHinese(96,0,11);
 175   4              OLED_ShowString(0,2," Yes?       No? ");
 176   4              step=1;
 177   4              
 178   4            }
C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 4   

 179   3            if(key==3)
 180   3              break;
 181   3          }
 182   2      
 183   2          if(step==1)
 184   2          {
 185   3            if(key==1)        //删除所有指纹
 186   3            {
 187   4              OLED_ShowString(0,0,"                ");
 188   4              OLED_ShowString(0,2,"                ");
 189   4              FPM10A_Delete_All_Fingerprint();
 190   4              for(i=3;i<13;i++)
 191   4              {
 192   5                OLED_ShowChar(i*8-8,2,'=');
 193   5                OLED_ShowChar(i*8,2,'>');
 194   5                delay_ms(200);
 195   5              }
 196   4              step=2;
 197   4              finger_id=0;
 198   4            }
 199   3            if(key==3)
 200   3            {
 201   4              step=2;
 202   4            }
 203   3          }
 204   2      
 205   2          if(step==2)
 206   2          { 
 207   3            step=0;
 208   3            OLED_ShowString(0,0,"                ");
 209   3            OLED_ShowString(0,2,"                ");
 210   3            
 211   3            OLED_ShowCHinese(32,0,10);
 212   3            OLED_ShowCHinese(48,0,11);
 213   3            OLED_ShowChar(64,0,':');
 214   3            OLED_ShowChar(72,0,finger_id/100+0x30);
 215   3            OLED_ShowChar(80,0,finger_id%100/10+0x30);
 216   3            OLED_ShowChar(88,0,finger_id%10+0x30);
 217   3            show_volt();
 218   3          }
 219   2        }
 220   1      }
 221          /*----------------------------
 222          指纹触摸唤醒后执行任务
 223          ----------------------------*/
 224          void finger_weakup_work()   
 225          {
 226   1        u8 i=0;
 227   1        u8 time = 3; //验证三次
 228   1        
 229   1        as608_pwr=0;              //打开OLED和指纹电源
 230   1        uart_rx_sta=0;
 231   1        Battery_get();
 232   1        delay_ms(5);              //指纹供电10ms以上再初始化串口
 233   1        Uart1_Init();             //串口初始化
 234   1        while((uart_rx_sta==0)&&(i<200)) //超过200ms没收到串口数据,或者收到数据，就跳过
 235   1        {
 236   2          i++;
 237   2          delay_ms(1);
 238   2        }
 239   1        OLED_Init();              //上电后，初始化OLED需要延时100MS,所以放在这里
 240   1        beep_work(1,100);
C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 5   

 241   1        
 242   1        while(time--)
 243   1        {
 244   2          if(FPM10A_Find_Fingerprint()==0)
 245   2          {
 246   3            show_volt();
 247   3            Door_Open(1600);
 248   3            break;
 249   3          }
 250   2        }
 251   1        
 252   1      }
 253          /*----------------------------
 254          主函数
 255          ----------------------------*/
 256          void main()
 257          {     
 258   1        P1M0 = 0x00;
 259   1        P1M1 = 0x00;
 260   1        P3M0 = 0x00;
 261   1        P3M1 = 0x00;
 262   1        P4M0 = 0x00;
 263   1        P4M1 = 0x00;
 264   1        P5M0 = 0x00;
 265   1        P5M1 = 0x00;
 266   1        while(1)
 267   1        {
 268   2          Pwr_Off();            //进入掉电模式，省电，程序不运行
 269   2          if(weakup_flag==1)    //key3按键唤醒
 270   2            key_weak_up_work();
 271   2          if(weakup_flag==0)    //指纹掉电模式唤醒后处理
 272   2            finger_weakup_work();
 273   2          
 274   2          if(Battery<370)       //低于3.7V报警
 275   2          {
 276   3            beep_work(2,100);
 277   3            beep_work(1,500);
 278   3            beep_work(2,100);
 279   3            beep_work(1,500);
 280   3            beep_work(2,100);
 281   3            beep_work(1,500);
 282   3            beep_work(2,100);
 283   3            beep_work(1,500);
 284   3          }
 285   2        }
 286   1      }
 287          /*----------------------------
 288          INT1中断入口，按键key3唤醒
 289          ----------------------------*/
 290          void exint1() interrupt 2
 291          {
 292   1        weakup_flag=1;    //key3按键唤醒
 293   1      }
 294          /*----------------------------
 295          INT0中断入口,指纹触摸
 296          ----------------------------*/
 297          void exint0() interrupt 0
 298          {
 299   1        weakup_flag=0;    //Tch指纹触摸高电平唤醒
 300   1      }
 301          /*---------------------------------------------------------------------*/
 302          /* --- STC MCU Limited ------------------------------------------------*/
C51 COMPILER V9.57.0.0   MAIN                                                              09/15/2021 13:52:11 PAGE 6   

 303          /* --- STC15F4K60S4 系列 定时器2用作串口1的波特率发生器举例------------*/
 304          /* --- Mobile: (86)13922805190 ----------------------------------------*/
 305          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
 306          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
 307          /* --- Web: www.STCMCU.com --------------------------------------------*/
 308          /* --- Web: www.GXWMCU.com --------------------------------------------*/
 309          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
 310          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
 311          /*---------------------------------------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1400    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =      8       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
