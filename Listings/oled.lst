C51 COMPILER V9.57.0.0   OLED                                                              09/15/2021 12:41:20 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE oled\oled.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..\代码;.\oled)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127       
  10          /**********************************************
  11          //IIC Start
  12          **********************************************/
  13          void IIC_Start()
  14          {
  15   1        OLED_SCLK_Set();
  16   1        OLED_SDIN_Set();
  17   1        OLED_SDIN_Clr();
  18   1        OLED_SCLK_Clr();
  19   1      }
  20          
  21          /**********************************************
  22          //IIC Stop
  23          **********************************************/
  24          void IIC_Stop()
  25          {
  26   1        OLED_SCLK_Set() ;
  27   1        OLED_SDIN_Clr();
  28   1        OLED_SDIN_Set();
  29   1      }
  30          void IIC_Wait_Ack()
  31          {
  32   1        OLED_SCLK_Set() ;
  33   1        OLED_SCLK_Clr();
  34   1      }
  35          /**********************************************
  36          // IIC Write byte
  37          **********************************************/
  38          void Write_IIC_Byte(unsigned char IIC_Byte)
  39          {
  40   1        unsigned char i;
  41   1        unsigned char m,da;
  42   1        da=IIC_Byte;
  43   1        OLED_SCLK_Clr();
  44   1        for(i=0;i<8;i++)    
  45   1        {
  46   2          m=da;
  47   2          m=m&0x80;
  48   2          if(m==0x80)
  49   2          {
  50   3            OLED_SDIN_Set();
  51   3          }
  52   2          else 
  53   2            OLED_SDIN_Clr();
  54   2          da=da<<1;
C51 COMPILER V9.57.0.0   OLED                                                              09/15/2021 12:41:20 PAGE 2   

  55   2          OLED_SCLK_Set();
  56   2          OLED_SCLK_Clr();
  57   2        }
  58   1      }
  59          /**********************************************
  60          // IIC Write Command
  61          **********************************************/
  62          void Write_IIC_Command(unsigned char IIC_Command)
  63          {
  64   1         IIC_Start();
  65   1         Write_IIC_Byte(0x78);      //Slave address,SA0=0
  66   1        IIC_Wait_Ack(); 
  67   1         Write_IIC_Byte(0x00);      //write command
  68   1        IIC_Wait_Ack(); 
  69   1         Write_IIC_Byte(IIC_Command); 
  70   1        IIC_Wait_Ack(); 
  71   1         IIC_Stop();
  72   1      }
  73          /**********************************************
  74          // IIC Write Data
  75          **********************************************/
  76          void Write_IIC_Data(unsigned char IIC_Data)
  77          {
  78   1         IIC_Start();
  79   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  80   1        IIC_Wait_Ack(); 
  81   1         Write_IIC_Byte(0x40);      //write data
  82   1        IIC_Wait_Ack(); 
  83   1         Write_IIC_Byte(IIC_Data);
  84   1        IIC_Wait_Ack(); 
  85   1         IIC_Stop();
  86   1      }
  87          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  88          {
  89   1        if(cmd)
  90   1        {
  91   2          Write_IIC_Data(dat);
  92   2        }
  93   1        else
  94   1        {
  95   2          Write_IIC_Command(dat);
  96   2        }
  97   1      }
  98          
  99          //坐标设置
 100          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 101          {   
 102   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 103   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 104   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 105   1      }                  
 106          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 107          void OLED_Clear(void)  
 108          {  
 109   1        u8 i,n;       
 110   1        for(i=0;i<4;i++)  
 111   1        {  
 112   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 113   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 114   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 115   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 116   2        } //更新显示
C51 COMPILER V9.57.0.0   OLED                                                              09/15/2021 12:41:20 PAGE 3   

 117   1      }
 118          //在指定位置显示一个字符,包括部分字符
 119          //x:0~127
 120          //y:0~63     
 121          //void OLED_ShowChar(u8 x,u8 y,u8 chr)
 122          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 123          {       
 124   1        unsigned char c=0,i=0;  
 125   1        c=chr-' ';//得到偏移后的值      
 126   1        if(x>Max_Column-1){x=0;y=y+2;}
 127   1        OLED_Set_Pos(x,y);  
 128   1        for(i=0;i<8;i++)
 129   1          OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 130   1        OLED_Set_Pos(x,y+1);
 131   1        for(i=0;i<8;i++)
 132   1          OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 133   1      }     
 134          //显示一个字符号串
 135          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 136          {
 137   1        unsigned char j=0;
 138   1        while (chr[j]!='\0')
 139   1        {   
 140   2          OLED_ShowChar(x,y,chr[j]);
 141   2            x+=8;
 142   2          if(x>120){x=0;y+=2;}
 143   2            j++;
 144   2        }
 145   1      }
 146          //显示汉字
 147          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 148          {               
 149   1        u8 t,adder=0;
 150   1        OLED_Set_Pos(x,y);  
 151   1        for(t=0;t<16;t++)
 152   1        {
 153   2          OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 154   2          adder+=1;
 155   2        } 
 156   1        OLED_Set_Pos(x,y+1);  
 157   1        for(t=0;t<16;t++)
 158   1        {
 159   2          OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 160   2          adder+=1;
 161   2        }
 162   1      }
 163          //初始化SSD1306             
 164          void OLED_Init(void)
 165          {   
 166   1        OLED_WR_Byte(0xAE,OLED_CMD);//关闭显示
 167   1        OLED_WR_Byte(0x40,OLED_CMD);//---set low column address
 168   1        OLED_WR_Byte(0xB0,OLED_CMD);//---set high column address
 169   1      
 170   1        OLED_WR_Byte(0xC8,OLED_CMD);//-not offset
 171   1      
 172   1        OLED_WR_Byte(0x81,OLED_CMD);//设置对比度
 173   1        OLED_WR_Byte(100,OLED_CMD);
 174   1      
 175   1        OLED_WR_Byte(0xa1,OLED_CMD);//段重定向设置
 176   1      
 177   1        OLED_WR_Byte(0xa6,OLED_CMD);//
 178   1        
C51 COMPILER V9.57.0.0   OLED                                                              09/15/2021 12:41:20 PAGE 4   

 179   1        OLED_WR_Byte(0xa8,OLED_CMD);//设置驱动路数
 180   1        OLED_WR_Byte(0x1f,OLED_CMD);
 181   1        
 182   1        OLED_WR_Byte(0xd3,OLED_CMD);
 183   1        OLED_WR_Byte(0x00,OLED_CMD);
 184   1        
 185   1        OLED_WR_Byte(0xd5,OLED_CMD);
 186   1        OLED_WR_Byte(0xf0,OLED_CMD);
 187   1        
 188   1        OLED_WR_Byte(0xd9,OLED_CMD);
 189   1        OLED_WR_Byte(0x22,OLED_CMD);
 190   1        
 191   1        OLED_WR_Byte(0xda,OLED_CMD);
 192   1        OLED_WR_Byte(0x02,OLED_CMD);
 193   1        
 194   1        OLED_WR_Byte(0xdb,OLED_CMD);
 195   1        OLED_WR_Byte(0x49,OLED_CMD);
 196   1        
 197   1        OLED_WR_Byte(0x8d,OLED_CMD);
 198   1        OLED_WR_Byte(0x14,OLED_CMD);
 199   1        
 200   1        OLED_WR_Byte(0xaf,OLED_CMD);
 201   1        OLED_Clear();
 202   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    838    ----
   CONSTANT SIZE    =   2096    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
