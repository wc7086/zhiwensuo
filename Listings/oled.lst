C51 COMPILER V9.57.0.0   OLED                                                              07/07/2021 19:56:52 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE oled\oled.c LARGE OPTIMIZE(7,SPEED) BROWSE INCDIR(..\代码;.\oled)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127         
  14          /**********************************************
  15          //IIC Start
  16          **********************************************/
  17          void IIC_Start()
  18          {
  19   1        OLED_SCLK_Set();
  20   1        OLED_SDIN_Set();
  21   1        OLED_SDIN_Clr();
  22   1        OLED_SCLK_Clr();
  23   1      }
  24          
  25          /**********************************************
  26          //IIC Stop
  27          **********************************************/
  28          void IIC_Stop()
  29          {
  30   1        OLED_SCLK_Set() ;
  31   1        OLED_SDIN_Clr();
  32   1        OLED_SDIN_Set();
  33   1      }
  34          void IIC_Wait_Ack()
  35          {
  36   1        OLED_SCLK_Set() ;
  37   1        OLED_SCLK_Clr();
  38   1      }
  39          /**********************************************
  40          // IIC Write byte
  41          **********************************************/
  42          void Write_IIC_Byte(unsigned char IIC_Byte)
  43          {
  44   1        unsigned char i;
  45   1        unsigned char m,da;
  46   1        da=IIC_Byte;
  47   1        OLED_SCLK_Clr();
  48   1        for(i=0;i<8;i++)    
  49   1        {
  50   2          m=da;
  51   2          m=m&0x80;
  52   2          if(m==0x80)
  53   2          {
  54   3            OLED_SDIN_Set();
C51 COMPILER V9.57.0.0   OLED                                                              07/07/2021 19:56:52 PAGE 2   

  55   3          }
  56   2          else 
  57   2            OLED_SDIN_Clr();
  58   2          da=da<<1;
  59   2          OLED_SCLK_Set();
  60   2          OLED_SCLK_Clr();
  61   2        }
  62   1      }
  63          /**********************************************
  64          // IIC Write Command
  65          **********************************************/
  66          void Write_IIC_Command(unsigned char IIC_Command)
  67          {
  68   1         IIC_Start();
  69   1         Write_IIC_Byte(0x78);      //Slave address,SA0=0
  70   1        IIC_Wait_Ack(); 
  71   1         Write_IIC_Byte(0x00);      //write command
  72   1        IIC_Wait_Ack(); 
  73   1         Write_IIC_Byte(IIC_Command); 
  74   1        IIC_Wait_Ack(); 
  75   1         IIC_Stop();
  76   1      }
  77          /**********************************************
  78          // IIC Write Data
  79          **********************************************/
  80          void Write_IIC_Data(unsigned char IIC_Data)
  81          {
  82   1         IIC_Start();
  83   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
  84   1        IIC_Wait_Ack(); 
  85   1         Write_IIC_Byte(0x40);      //write data
  86   1        IIC_Wait_Ack(); 
  87   1         Write_IIC_Byte(IIC_Data);
  88   1        IIC_Wait_Ack(); 
  89   1         IIC_Stop();
  90   1      }
  91          void OLED_WR_Byte(unsigned dat,unsigned cmd)
  92          {
  93   1        if(cmd)
  94   1        {
  95   2          Write_IIC_Data(dat);
  96   2        }
  97   1        else
  98   1        {
  99   2          Write_IIC_Command(dat);
 100   2        }
 101   1      }
 102          
 103          //坐标设置
 104          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 105          {   
 106   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 107   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 108   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 109   1      }                  
 110          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 111          void OLED_Clear(void)  
 112          {  
 113   1        u8 i,n;       
 114   1        for(i=0;i<4;i++)  
 115   1        {  
 116   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
C51 COMPILER V9.57.0.0   OLED                                                              07/07/2021 19:56:52 PAGE 3   

 117   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 118   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 119   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 120   2        } //更新显示
 121   1      }
 122          //在指定位置显示一个字符,包括部分字符
 123          //x:0~127
 124          //y:0~63     
 125          //void OLED_ShowChar(u8 x,u8 y,u8 chr)
 126          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 127          {       
 128   1        unsigned char c=0,i=0;  
 129   1        c=chr-' ';//得到偏移后的值      
 130   1        if(x>Max_Column-1){x=0;y=y+2;}
 131   1        OLED_Set_Pos(x,y);  
 132   1        for(i=0;i<8;i++)
 133   1          OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 134   1        OLED_Set_Pos(x,y+1);
 135   1        for(i=0;i<8;i++)
 136   1          OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 137   1      }     
 138          //显示一个字符号串
 139          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 140          {
 141   1        unsigned char j=0;
 142   1        while (chr[j]!='\0')
 143   1        {   
 144   2          OLED_ShowChar(x,y,chr[j]);
 145   2            x+=8;
 146   2          if(x>120){x=0;y+=2;}
 147   2            j++;
 148   2        }
 149   1      }
 150          //显示汉字
 151          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 152          {               
 153   1        u8 t,adder=0;
 154   1        OLED_Set_Pos(x,y);  
 155   1        for(t=0;t<16;t++)
 156   1        {
 157   2          OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 158   2          adder+=1;
 159   2        } 
 160   1        OLED_Set_Pos(x,y+1);  
 161   1        for(t=0;t<16;t++)
 162   1        {
 163   2          OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 164   2          adder+=1;
 165   2        }
 166   1      }
 167          //初始化SSD1306             
 168          void OLED_Init(void)
 169          {   
 170   1        OLED_WR_Byte(0xAE,OLED_CMD);//关闭显示
 171   1        OLED_WR_Byte(0x40,OLED_CMD);//---set low column address
 172   1        OLED_WR_Byte(0xB0,OLED_CMD);//---set high column address
 173   1      
 174   1        OLED_WR_Byte(0xC8,OLED_CMD);//-not offset
 175   1      
 176   1        OLED_WR_Byte(0x81,OLED_CMD);//设置对比度
 177   1        OLED_WR_Byte(100,OLED_CMD);
 178   1      
C51 COMPILER V9.57.0.0   OLED                                                              07/07/2021 19:56:52 PAGE 4   

 179   1        OLED_WR_Byte(0xa1,OLED_CMD);//段重定向设置
 180   1      
 181   1        OLED_WR_Byte(0xa6,OLED_CMD);//
 182   1        
 183   1        OLED_WR_Byte(0xa8,OLED_CMD);//设置驱动路数
 184   1        OLED_WR_Byte(0x1f,OLED_CMD);
 185   1        
 186   1        OLED_WR_Byte(0xd3,OLED_CMD);
 187   1        OLED_WR_Byte(0x00,OLED_CMD);
 188   1        
 189   1        OLED_WR_Byte(0xd5,OLED_CMD);
 190   1        OLED_WR_Byte(0xf0,OLED_CMD);
 191   1        
 192   1        OLED_WR_Byte(0xd9,OLED_CMD);
 193   1        OLED_WR_Byte(0x22,OLED_CMD);
 194   1        
 195   1        OLED_WR_Byte(0xda,OLED_CMD);
 196   1        OLED_WR_Byte(0x02,OLED_CMD);
 197   1        
 198   1        OLED_WR_Byte(0xdb,OLED_CMD);
 199   1        OLED_WR_Byte(0x49,OLED_CMD);
 200   1        
 201   1        OLED_WR_Byte(0x8d,OLED_CMD);
 202   1        OLED_WR_Byte(0x14,OLED_CMD);
 203   1        
 204   1        OLED_WR_Byte(0xaf,OLED_CMD);
 205   1        OLED_Clear();
 206   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    838    ----
   CONSTANT SIZE    =   2096    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
